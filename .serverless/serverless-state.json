{
  "service": {
    "service": "greet",
    "serviceObject": {
      "name": "greet"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs22.x",
      "region": "us-east-2",
      "environment": {
        "CLIENT_ID": "2sphqvjfjrqmnslps2oijq86k1"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:GetItem",
            "dynamodb:UpdateItem"
          ],
          "Resource": "arn:aws:dynamodb:us-east-2:010526250202:table/UsersTable"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "SignUpLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/greet-dev-signUp"
            }
          },
          "ConfirmSignUpLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/greet-dev-ConfirmSignUp"
            }
          },
          "SignInLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/greet-dev-signIn"
            }
          },
          "SignOutLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/greet-dev-signOut"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "greet",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/greet-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/greet-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "greet",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SignUpLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-2-7c919ff3-4e8e",
                "S3Key": "serverless/greet/dev/1752588752707-2025-07-15T14:12:32.707Z/greet.zip"
              },
              "Handler": "handlers/signUp.signUp",
              "Runtime": "nodejs22.x",
              "FunctionName": "greet-dev-signUp",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLIENT_ID": "2sphqvjfjrqmnslps2oijq86k1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SignUpLogGroup"
            ]
          },
          "ConfirmSignUpLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-2-7c919ff3-4e8e",
                "S3Key": "serverless/greet/dev/1752588752707-2025-07-15T14:12:32.707Z/greet.zip"
              },
              "Handler": "handlers/confirmSignUp.ConfirmSignUp",
              "Runtime": "nodejs22.x",
              "FunctionName": "greet-dev-ConfirmSignUp",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLIENT_ID": "2sphqvjfjrqmnslps2oijq86k1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ConfirmSignUpLogGroup"
            ]
          },
          "SignInLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-2-7c919ff3-4e8e",
                "S3Key": "serverless/greet/dev/1752588752707-2025-07-15T14:12:32.707Z/greet.zip"
              },
              "Handler": "handlers/signin.signIn",
              "Runtime": "nodejs22.x",
              "FunctionName": "greet-dev-signIn",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLIENT_ID": "2sphqvjfjrqmnslps2oijq86k1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SignInLogGroup"
            ]
          },
          "SignOutLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-2-7c919ff3-4e8e",
                "S3Key": "serverless/greet/dev/1752588752707-2025-07-15T14:12:32.707Z/greet.zip"
              },
              "Handler": "handlers/signOut.signOut",
              "Runtime": "nodejs22.x",
              "FunctionName": "greet-dev-signOut",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CLIENT_ID": "2sphqvjfjrqmnslps2oijq86k1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SignOutLogGroup"
            ]
          },
          "SignUpLambdaVersion0vs0B3vl1BqqTIqatXRZiVmVB5vt6cO2R4CrwvqQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignUpLambdaFunction"
              },
              "CodeSha256": "l+MsFwg/9M/DIc7IJL1UxGAn8nxytzJ+xzycQihTzxQ="
            }
          },
          "ConfirmSignUpLambdaVersionJOAnF86OmTG2ri9s3Y0TOFPS1aPm4dTCAR5H0fSk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ConfirmSignUpLambdaFunction"
              },
              "CodeSha256": "l+MsFwg/9M/DIc7IJL1UxGAn8nxytzJ+xzycQihTzxQ="
            }
          },
          "SignInLambdaVersionjOlx9FWT3AKEJPIl4qohExy1ImK3cCXhQ848pQP5Y": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignInLambdaFunction"
              },
              "CodeSha256": "l+MsFwg/9M/DIc7IJL1UxGAn8nxytzJ+xzycQihTzxQ="
            }
          },
          "SignOutLambdaVersion35puk77X86jGEFV2NgWPsyiysqxOPYuA9SqmBjqSmw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignOutLambdaFunction"
              },
              "CodeSha256": "l+MsFwg/9M/DIc7IJL1UxGAn8nxytzJ+xzycQihTzxQ="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-greet",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "SignUpLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignUpLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSignUp": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SignUpLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostSignup": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /signUp",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSignUp"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSignUp"
          },
          "ConfirmSignUpLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ConfirmSignUpLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationConfirmSignUp": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ConfirmSignUpLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostConfirmsignup": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /confirmSignUp",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationConfirmSignUp"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationConfirmSignUp"
          },
          "SignInLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignInLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSignIn": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SignInLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostSignDashin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /sign-in",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSignIn"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSignIn"
          },
          "SignOutLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignOutLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSignOut": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SignOutLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostSignDashout": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /sign-out",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSignOut"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSignOut"
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "UsersTable",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-2-7c919ff3-4e8e",
            "Export": {
              "Name": "sls-greet-dev-ServerlessDeploymentBucketName"
            }
          },
          "SignUpLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignUpLambdaVersion0vs0B3vl1BqqTIqatXRZiVmVB5vt6cO2R4CrwvqQ"
            },
            "Export": {
              "Name": "sls-greet-dev-SignUpLambdaFunctionQualifiedArn"
            }
          },
          "ConfirmSignUpLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ConfirmSignUpLambdaVersionJOAnF86OmTG2ri9s3Y0TOFPS1aPm4dTCAR5H0fSk"
            },
            "Export": {
              "Name": "sls-greet-dev-ConfirmSignUpLambdaFunctionQualifiedArn"
            }
          },
          "SignInLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignInLambdaVersionjOlx9FWT3AKEJPIl4qohExy1ImK3cCXhQ848pQP5Y"
            },
            "Export": {
              "Name": "sls-greet-dev-SignInLambdaFunctionQualifiedArn"
            }
          },
          "SignOutLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignOutLambdaVersion35puk77X86jGEFV2NgWPsyiysqxOPYuA9SqmBjqSmw"
            },
            "Export": {
              "Name": "sls-greet-dev-SignOutLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-greet-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-greet-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "signUp": {
        "handler": "handlers/signUp.signUp",
        "events": [
          {
            "httpApi": {
              "path": "/signUp",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/signUp"
          }
        ],
        "name": "greet-dev-signUp",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "SignUpLambdaVersion0vs0B3vl1BqqTIqatXRZiVmVB5vt6cO2R4CrwvqQ"
      },
      "ConfirmSignUp": {
        "handler": "handlers/confirmSignUp.ConfirmSignUp",
        "events": [
          {
            "httpApi": {
              "path": "/confirmSignUp",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/confirmSignUp"
          }
        ],
        "name": "greet-dev-ConfirmSignUp",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "ConfirmSignUpLambdaVersionJOAnF86OmTG2ri9s3Y0TOFPS1aPm4dTCAR5H0fSk"
      },
      "signIn": {
        "handler": "handlers/signin.signIn",
        "events": [
          {
            "httpApi": {
              "path": "/sign-in",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/sign-in"
          }
        ],
        "name": "greet-dev-signIn",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "SignInLambdaVersionjOlx9FWT3AKEJPIl4qohExy1ImK3cCXhQ848pQP5Y"
      },
      "signOut": {
        "handler": "handlers/signOut.signOut",
        "events": [
          {
            "httpApi": {
              "path": "/sign-out",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/sign-out"
          }
        ],
        "name": "greet-dev-signOut",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs22.x",
        "vpc": {},
        "versionLogicalId": "SignOutLambdaVersion35puk77X86jGEFV2NgWPsyiysqxOPYuA9SqmBjqSmw"
      }
    },
    "resources": {
      "Resources": {
        "UsersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "UsersTable",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "userId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "org": "greet",
      "service": "greet",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "appId": null,
    "org": "greet",
    "orgId": null,
    "layers": {},
    "artifact": "C:\\Users\\User\\greet\\.serverless\\greet.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/greet/dev/1752588752707-2025-07-15T14:12:32.707Z",
    "artifact": "greet.zip"
  }
}