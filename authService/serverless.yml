# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: greet
# "service" is the name of this project. This will also be added to your AWS resource names.
service: greet

provider:
  name: aws
  runtime: nodejs22.x
  region: us-east-2
  environment:
    CLIENT_ID: ${ssm:/Client_ID} # securely fetch from
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource: 
        - arn:aws:dynamodb:us-east-2:010526250202:table/UsersTable #Allow access to the UsersTable

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table #Defines a dynamoDB table resources
      Properties:
        TableName: UsersTable
        BillingMode: PAY_PER_REQUEST #DynamoDB billing mode Automatically scales read/write capacity
        AttributeDefinitions:
          - AttributeName: userId #The partition key(unique identifier for each user)
            AttributeType: S # "S" stands for String
        KeySchema:
          - AttributeName: userId #define userId as the primary key
            KeyType: HASH #HASH indicates the partition key
        

functions:

  signUp:
    handler: handlers/signUp.signUp
    events:
      - httpApi:
          path: /signUp
          method: post
  ConfirmSignUp:
    handler: handlers/confirmSignUp.ConfirmSignUp
    events:
      - httpApi:
          path: /confirmSignUp
          method: post
  signIn:
    handler: handlers/signin.signIn
    events:
      - httpApi:
          path: /sign-in
          method: post
  signOut:
    handler: handlers/signOut.signOut
    events:
      - httpApi:
          path: /sign-out
          method: post

    
